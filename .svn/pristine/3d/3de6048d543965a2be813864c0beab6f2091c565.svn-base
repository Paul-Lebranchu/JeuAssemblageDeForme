<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="fr">
<head>
<!-- Generated by javadoc (1.8.0_265) on Sat Nov 28 17:56:37 CET 2020 -->
<title>Index</title>
<meta name="date" content="2020-11-28">
<link rel="stylesheet" type="text/css" href="stylesheet.css" title="Style">
<script type="text/javascript" src="script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="Index";
        }
    }
    catch(err) {
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="overview-summary.html">Overview</a></li>
<li>Package</li>
<li>Class</li>
<li><a href="overview-tree.html">Tree</a></li>
<li><a href="deprecated-list.html">Deprecated</a></li>
<li class="navBarCell1Rev">Index</li>
<li><a href="help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev</li>
<li>Next</li>
</ul>
<ul class="navList">
<li><a href="index.html?index-all.html" target="_top">Frames</a></li>
<li><a href="index-all.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<div class="contentContainer"><a href="#I:A">A</a>&nbsp;<a href="#I:B">B</a>&nbsp;<a href="#I:C">C</a>&nbsp;<a href="#I:D">D</a>&nbsp;<a href="#I:E">E</a>&nbsp;<a href="#I:F">F</a>&nbsp;<a href="#I:G">G</a>&nbsp;<a href="#I:I">I</a>&nbsp;<a href="#I:M">M</a>&nbsp;<a href="#I:N">N</a>&nbsp;<a href="#I:P">P</a>&nbsp;<a href="#I:R">R</a>&nbsp;<a href="#I:S">S</a>&nbsp;<a href="#I:T">T</a>&nbsp;<a href="#I:V">V</a>&nbsp;<a href="#I:W">W</a>&nbsp;<a href="#I:X">X</a>&nbsp;<a href="#I:Y">Y</a>&nbsp;<a name="I:A">
<!--   -->
</a>
<h2 class="title">A</h2>
<dl>
<dt><a href="Controlleur/AbstractModelEcoutable.html" title="class in Controlleur"><span class="typeNameLink">AbstractModelEcoutable</span></a> - Class in <a href="Controlleur/package-summary.html">Controlleur</a></dt>
<dd>
<div class="block"> class AbstractModelEcoutable 

                La classe implémente ModelEcoutable et définit les méthodes ajout/retraitEcouteur</div>
</dd>
<dt><span class="memberNameLink"><a href="Controlleur/AbstractModelEcoutable.html#AbstractModelEcoutable--">AbstractModelEcoutable()</a></span> - Constructor for class Controlleur.<a href="Controlleur/AbstractModelEcoutable.html" title="class in Controlleur">AbstractModelEcoutable</a></dt>
<dd>&nbsp;</dd>
<dt><a href="Vue/Affichage.html" title="class in Vue"><span class="typeNameLink">Affichage</span></a> - Class in <a href="Vue/package-summary.html">Vue</a></dt>
<dd>
<div class="block"> Affichage 
  Classe générant le JFrame où se trouvera le jeu</div>
</dd>
<dt><span class="memberNameLink"><a href="Vue/Affichage.html#Affichage--">Affichage()</a></span> - Constructor for class Vue.<a href="Vue/Affichage.html" title="class in Vue">Affichage</a></dt>
<dd>&nbsp;</dd>
<dt><a href="Vue/AffPlateau.html" title="class in Vue"><span class="typeNameLink">AffPlateau</span></a> - Class in <a href="Vue/package-summary.html">Vue</a></dt>
<dd>
<div class="block"> AffPlateau 
  Classe générant les JButton qui simboliseront le Plateau de jeu</div>
</dd>
<dt><span class="memberNameLink"><a href="Vue/AffPlateau.html#AffPlateau-Modele.Plateau-javax.swing.JPanel-int-">AffPlateau(Plateau, JPanel, int)</a></span> - Constructor for class Vue.<a href="Vue/AffPlateau.html" title="class in Vue">AffPlateau</a></dt>
<dd>
<div class="block"> Constructeur : prend en argument un Platteau (Platteau a afficher),
un JPanel (où on affichera le Plateau) et un int qui représente la difficulté
selectionner</div>
</dd>
<dt><span class="memberNameLink"><a href="Controlleur/AbstractModelEcoutable.html#ajoutEcouteur-Controlleur.EcouteurModel-">ajoutEcouteur(EcouteurModel)</a></span> - Method in class Controlleur.<a href="Controlleur/AbstractModelEcoutable.html" title="class in Controlleur">AbstractModelEcoutable</a></dt>
<dd>
<div class="block"> methode ajoutant un EcouteurModel à la liste</div>
</dd>
<dt><span class="memberNameLink"><a href="Controlleur/ModelEcoutable.html#ajoutEcouteur-Controlleur.EcouteurModel-">ajoutEcouteur(EcouteurModel)</a></span> - Method in interface Controlleur.<a href="Controlleur/ModelEcoutable.html" title="interface in Controlleur">ModelEcoutable</a></dt>
<dd>&nbsp;</dd>
</dl>
<a name="I:B">
<!--   -->
</a>
<h2 class="title">B</h2>
<dl>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#back">back</a></span> - Variable in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Vue/Fenetre.html#background">background</a></span> - Variable in class Vue.<a href="Vue/Fenetre.html" title="class in Vue">Fenetre</a></dt>
<dd>&nbsp;</dd>
</dl>
<a name="I:C">
<!--   -->
</a>
<h2 class="title">C</h2>
<dl>
<dt><span class="memberNameLink"><a href="Modele/CreationPlateau.html#collisionPiece-piece.PiecesPuzzle-">collisionPiece(PiecesPuzzle)</a></span> - Method in class Modele.<a href="Modele/CreationPlateau.html" title="class in Modele">CreationPlateau</a></dt>
<dd>
<div class="block">cette méthode nous permet de parcourir le plateau en verifiant si oui ou non la pièce que nous voulons y placer peux y etre placé.</div>
</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#commande--">commande()</a></span> - Method in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>
<div class="block"> méthode qui affiche les control du jeu lorsque l'on appuie sur le bouton control dans le menu</div>
</dd>
<dt><span class="memberNameLink"><a href="Vue/AffPlateau.html#contenu">contenu</a></span> - Variable in class Vue.<a href="Vue/AffPlateau.html" title="class in Vue">AffPlateau</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#control">control</a></span> - Variable in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>&nbsp;</dd>
<dt><a href="Controlleur/package-summary.html">Controlleur</a> - package Controlleur</dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#controlleur">controlleur</a></span> - Variable in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#creaDur--">creaDur()</a></span> - Method in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>
<div class="block"> méthode liant la création d'une partie de niveau difficile au JButton difficle </div>
</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#creaFacile--">creaFacile()</a></span> - Method in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>
<div class="block"> méthode liant la création d'une partie de niveau facile au JButton facile </div>
</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#creaMedium--">creaMedium()</a></span> - Method in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>
<div class="block"> méthode liant la création d'une partie de niveau medium au JButton medium </div>
</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#creaPerso--">creaPerso()</a></span> - Method in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>
<div class="block"> méthode liant la création d'une partie de niveau personnalisé au JButton personnalisé:
 l'utilisateur doit saisir son niveau de difficulté et on lui renvoie un message d'erreur si
 la valeur saisie dans le TextArea n'est pas correctes (message affiché sur la Vue)</div>
</dd>
<dt><span class="memberNameLink"><a href="Vue/AffPlateau.html#creaPlat--">creaPlat()</a></span> - Method in class Vue.<a href="Vue/AffPlateau.html" title="class in Vue">AffPlateau</a></dt>
<dd>
<div class="block"> méthode générant les JButtons symbolisant le Plateau de jeu
 dans un premier temps, on génère des gap pour que le plateau soit
 centré en fonction de sa taille.</div>
</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#creaPlat-int-java.lang.String-int-">creaPlat(int, String, int)</a></span> - Method in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>
<div class="block"> méthode de création de partie, prend en argument le niveau de dificulté choisis
par l'utilisateur, un String qui écrira le niveau de difficulté sur l'écran de jeu
et un gap pour centrer le texte sur la plaque de jeu.</div>
</dd>
<dt><a href="Modele/CreationPlateau.html" title="class in Modele"><span class="typeNameLink">CreationPlateau</span></a> - Class in <a href="Modele/package-summary.html">Modele</a></dt>
<dd>
<div class="block"> CréationPlateau 
  Classe s'occuppant de la création du Plateau de jeu et des diverses action de jeu.</div>
</dd>
<dt><span class="memberNameLink"><a href="Modele/CreationPlateau.html#CreationPlateau-int-">CreationPlateau(int)</a></span> - Constructor for class Modele.<a href="Modele/CreationPlateau.html" title="class in Modele">CreationPlateau</a></dt>
<dd>
<div class="block">Constructeur :  initialise la liste des écouteurs, la liste des pièces,
 créé un Plateau de jeu en fonction de la difficulté mise en paramètre,
génère les pièces du jeu et remet l'identifiant des pièces à 1 pour les partie
suivantes</div>
</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#custom">custom</a></span> - Variable in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>&nbsp;</dd>
</dl>
<a name="I:D">
<!--   -->
</a>
<h2 class="title">D</h2>
<dl>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#deplacement--">deplacement()</a></span> - Method in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>
<div class="block">On ajoute un événènement à tout les boutons du plateau de jeu: si une pièce
est selectionné, on peut la déplacer sur la case sélectionner en effectuant un clique
droit sur la case, on teste ensuite si le déplacement est possible.</div>
</dd>
<dt><span class="memberNameLink"><a href="Modele/CreationPlateau.html#deplacer-piece.PiecesPuzzle-int-int-">deplacer(PiecesPuzzle, int, int)</a></span> - Method in class Modele.<a href="Modele/CreationPlateau.html" title="class in Modele">CreationPlateau</a></dt>
<dd>
<div class="block"> méthode qui déplace une pièce: dans un premier temps, elle efface la pièce
puis elle vérifie si le déplacement est valide: si le mouvement est valide,
on effectue le déplacement, sinon on remet la pièce à son emplacement d'origine
et explique l'erreur dans la console.</div>
</dd>
<dt><span class="memberNameLink"><a href="Vue/AffPlateau.html#diffcult">diffcult</a></span> - Variable in class Vue.<a href="Vue/AffPlateau.html" title="class in Vue">AffPlateau</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#difficile">difficile</a></span> - Variable in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Modele/CreationPlateau.html#difficult">difficult</a></span> - Variable in class Modele.<a href="Modele/CreationPlateau.html" title="class in Modele">CreationPlateau</a></dt>
<dd>&nbsp;</dd>
</dl>
<a name="I:E">
<!--   -->
</a>
<h2 class="title">E</h2>
<dl>
<dt><a href="Controlleur/EcouteurModel.html" title="interface in Controlleur"><span class="typeNameLink">EcouteurModel</span></a> - Interface in <a href="Controlleur/package-summary.html">Controlleur</a></dt>
<dd>
<div class="block"> Interface EcouteurModel 
 Interface obligeant ces classes filles à avoir la méthodes modelMiseAJour</div>
</dd>
<dt><span class="memberNameLink"><a href="Controlleur/AbstractModelEcoutable.html#ecouteurs">ecouteurs</a></span> - Variable in class Controlleur.<a href="Controlleur/AbstractModelEcoutable.html" title="class in Controlleur">AbstractModelEcoutable</a></dt>
<dd>
<div class="block"> List<EcouteurModel> : contient tout les EcouteurModel du modèle</div>
</dd>
<dt><span class="memberNameLink"><a href="Modele/CreationPlateau.html#ecrirePiece-piece.PiecesPuzzle-">ecrirePiece(PiecesPuzzle)</a></span> - Method in class Modele.<a href="Modele/CreationPlateau.html" title="class in Modele">CreationPlateau</a></dt>
<dd>
<div class="block"> méthode qui inscrit les pièces dans le tableau en marquant leur position par un
entier correspondant à leur identifiant
</div>
</dd>
<dt><span class="memberNameLink"><a href="Modele/CreationPlateau.html#effacerPiece-piece.PiecesPuzzle-">effacerPiece(PiecesPuzzle)</a></span> - Method in class Modele.<a href="Modele/CreationPlateau.html" title="class in Modele">CreationPlateau</a></dt>
<dd>
<div class="block"> méthode qui efface les pièces du plateau, elle est utilisée pour
marquer les déplacement ou les rotation
</div>
</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#enCours--">enCours()</a></span> - Method in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>
<div class="block"> méthode permettant de retourner sur la partie en cours lorsque l'on est retoruné sur le menu
sans avoir déclaré avoir fini la partie</div>
</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#ennonce">ennonce</a></span> - Variable in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#erreur">erreur</a></span> - Variable in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#errorCharg">errorCharg</a></span> - Variable in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Modele/Main.html#exe--">exe()</a></span> - Static method in class Modele.<a href="Modele/Main.html" title="class in Modele">Main</a></dt>
<dd>
<div class="block">méthode executant le programme en version console: D'abord on demande à l'utilisateur
de choisir une difficulté de jeu, puis on lui génère un plateau et lui demande
les actons qu'il souhaite effectué, une fois qu'il a fini de jouer, on lui demande
de rentrer son pseudo puis on lui demande s'il veut rejouer ou non</div>
</dd>
</dl>
<a name="I:F">
<!--   -->
</a>
<h2 class="title">F</h2>
<dl>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#facile">facile</a></span> - Variable in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#fantomePiece--">fantomePiece()</a></span> - Method in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>
<div class="block">On ajoute un événènement à tout les boutons du plateau de jeu: si une pièce
est selectionné,lorsque l'on passe la souris sur une case de plateau, on voit le fantome
de la pièce apparaitre sur le Plateau: ce fantome représente la nouvelle place de la pièce
si l'on effectue un déplacement, cette méthode permet de faciliter l'experience du joueur/p></div>
</dd>
<dt><span class="memberNameLink"><a href="Vue/Affichage.html#fen">fen</a></span> - Variable in class Vue.<a href="Vue/Affichage.html" title="class in Vue">Affichage</a></dt>
<dd>
<div class="block">constructeur :  créé une instance de la classe Fenetre qui
sera affiché dans le JFrame  + réglagle du JFrame</div>
</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#fen">fen</a></span> - Variable in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>&nbsp;</dd>
<dt><a href="Vue/Fenetre.html" title="class in Vue"><span class="typeNameLink">Fenetre</span></a> - Class in <a href="Vue/package-summary.html">Vue</a></dt>
<dd>
<div class="block"> Fenetre 
  Classe générant le JPanel qui contiendra le jeu</div>
</dd>
<dt><span class="memberNameLink"><a href="Vue/Fenetre.html#Fenetre--">Fenetre()</a></span> - Constructor for class Vue.<a href="Vue/Fenetre.html" title="class in Vue">Fenetre</a></dt>
<dd>
<div class="block"> Constructeur: Définis la couleur de fond et créé une instance de
 la classe Menu et l'affiche</div>
</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#fin">fin</a></span> - Variable in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Modele/CreationPlateau.html#finDePartie-java.lang.String-">finDePartie(String)</a></span> - Method in class Modele.<a href="Modele/CreationPlateau.html" title="class in Modele">CreationPlateau</a></dt>
<dd>
<div class="block"> méthode qui gère la fin de partie: dans un premier temps, on calul le score
et on l'affiche en console.</div>
</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#finDePartie--">finDePartie()</a></span> - Method in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>
<div class="block"> méthode définissant la fin de la partie (lié au bouton fin de partie sur
                l'écran de jeu): elle demandera à l'utilisateur de rentrer son pseudo puis sauvegardera
                et affichera son score ainsi que le score de l'IA sur la fenêtre de jeu</div>
</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#finPartie">finPartie</a></span> - Variable in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>&nbsp;</dd>
</dl>
<a name="I:G">
<!--   -->
</a>
<h2 class="title">G</h2>
<dl>
<dt><span class="memberNameLink"><a href="Modele/CreationPlateau.html#generePiece--">generePiece()</a></span> - Method in class Modele.<a href="Modele/CreationPlateau.html" title="class in Modele">CreationPlateau</a></dt>
<dd>
<div class="block"> méthode générant les pièces du plateau en utilisant PieceFactory pour
générer des pièces plus facilement et les place dans le tableau après leur création
</div>
</dd>
<dt><span class="memberNameLink"><a href="Modele/CreationPlateau.html#gestionDesScores--">gestionDesScores()</a></span> - Method in class Modele.<a href="Modele/CreationPlateau.html" title="class in Modele">CreationPlateau</a></dt>
<dd>
<div class="block"> méthode qui calcule le score obtenu par le joueur à la fin de la partie.
cette méthode calcule l'air du rectangle minimal entourant la forme créé
par l'utilisateur. pour faire ça, on récupère la première et la dernière
ligne/colonne contenant un chiffre et on valucle l'air trouvé puis on fait
l'aire du plateau - l'aire de la forme créée et on renvoi le score sous la forme
d'un int
</div>
</dd>
<dt><span class="memberNameLink"><a href="Modele/Plateau.html#getHauteur--">getHauteur()</a></span> - Method in class Modele.<a href="Modele/Plateau.html" title="class in Modele">Plateau</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Modele/Plateau.html#getLargeur--">getLargeur()</a></span> - Method in class Modele.<a href="Modele/Plateau.html" title="class in Modele">Plateau</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Vue/AffPlateau.html#getListeBouton--">getListeBouton()</a></span> - Method in class Vue.<a href="Vue/AffPlateau.html" title="class in Vue">AffPlateau</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Modele/CreationPlateau.html#getListePiece--">getListePiece()</a></span> - Method in class Modele.<a href="Modele/CreationPlateau.html" title="class in Modele">CreationPlateau</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Modele/CreationPlateau.html#getPlateau--">getPlateau()</a></span> - Method in class Modele.<a href="Modele/CreationPlateau.html" title="class in Modele">CreationPlateau</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Modele/Plateau.html#getTab2--">getTab2()</a></span> - Method in class Modele.<a href="Modele/Plateau.html" title="class in Modele">Plateau</a></dt>
<dd>&nbsp;</dd>
</dl>
<a name="I:I">
<!--   -->
</a>
<h2 class="title">I</h2>
<dl>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#imageBouton">imageBouton</a></span> - Variable in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#imagePanneau">imagePanneau</a></span> - Variable in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Modele/CreationPlateau.html#intelArtif--">intelArtif()</a></span> - Method in class Modele.<a href="Modele/CreationPlateau.html" title="class in Modele">CreationPlateau</a></dt>
<dd>
<div class="block"> méthode qui calcule le score de l'IA
La méthode intelArtif est construite sur une boucle for, pour parcourir la liste des pièces que l'on veut placer.</div>
</dd>
</dl>
<a name="I:M">
<!--   -->
</a>
<h2 class="title">M</h2>
<dl>
<dt><a href="Modele/Main.html" title="class in Modele"><span class="typeNameLink">Main</span></a> - Class in <a href="Modele/package-summary.html">Modele</a></dt>
<dd>
<div class="block"> Modele.Main 
  Classe générant le jeu en mode console.</div>
</dd>
<dt><span class="memberNameLink"><a href="Modele/Main.html#Main--">Main()</a></span> - Constructor for class Modele.<a href="Modele/Main.html" title="class in Modele">Main</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Vue/AffPlateau.html#maj--">maj()</a></span> - Method in class Vue.<a href="Vue/AffPlateau.html" title="class in Vue">AffPlateau</a></dt>
<dd>
<div class="block"> méthode qui met à jour les couleurs des boutons en fonction
du mouvement effectué par l'utilisateur </div>
</dd>
<dt><span class="memberNameLink"><a href="Modele/CreationPlateau.html#max">max</a></span> - Variable in class Modele.<a href="Modele/CreationPlateau.html" title="class in Modele">CreationPlateau</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#medium">medium</a></span> - Variable in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Vue/Fenetre.html#menu">menu</a></span> - Variable in class Vue.<a href="Vue/Fenetre.html" title="class in Vue">Fenetre</a></dt>
<dd>&nbsp;</dd>
<dt><a href="Vue/Menu.html" title="class in Vue"><span class="typeNameLink">Menu</span></a> - Class in <a href="Vue/package-summary.html">Vue</a></dt>
<dd>
<div class="block"> Menu 
  Classe générant le Menu, les parties et les event</div>
</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#Menu-javax.swing.JPanel-">Menu(JPanel)</a></span> - Constructor for class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>
<div class="block"> Constructeur: Définis l'ensemble des boutons/ JPanel
 Le constructeur prend un JPanel en argument:  le Jpanel où seront affiché
 les éléments de cette classe.</div>
</dd>
<dt><span class="memberNameLink"><a href="Modele/CreationPlateau.html#min">min</a></span> - Variable in class Modele.<a href="Modele/CreationPlateau.html" title="class in Modele">CreationPlateau</a></dt>
<dd>&nbsp;</dd>
<dt><a href="Modele/package-summary.html">Modele</a> - package Modele</dt>
<dd>&nbsp;</dd>
<dt><a href="Controlleur/ModelEcoutable.html" title="interface in Controlleur"><span class="typeNameLink">ModelEcoutable</span></a> - Interface in <a href="Controlleur/package-summary.html">Controlleur</a></dt>
<dd>
<div class="block"> Interface ModelEcoutable 
 Interface obligeant ces classes filles à avoir les méthodes ajoutEcouteur et retraitEcouteur</div>
</dd>
<dt><span class="memberNameLink"><a href="Controlleur/EcouteurModel.html#modelMiseAJour-java.lang.Object-">modelMiseAJour(Object)</a></span> - Method in interface Controlleur.<a href="Controlleur/EcouteurModel.html" title="interface in Controlleur">EcouteurModel</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#modelMiseAJour-java.lang.Object-">modelMiseAJour(Object)</a></span> - Method in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Controlleur/AbstractModelEcoutable.html#mouvPiece--">mouvPiece()</a></span> - Method in class Controlleur.<a href="Controlleur/AbstractModelEcoutable.html" title="class in Controlleur">AbstractModelEcoutable</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Modele/CreationPlateau.html#mouvPiece--">mouvPiece()</a></span> - Method in class Modele.<a href="Modele/CreationPlateau.html" title="class in Modele">CreationPlateau</a></dt>
<dd>&nbsp;</dd>
</dl>
<a name="I:N">
<!--   -->
</a>
<h2 class="title">N</h2>
<dl>
<dt><span class="memberNameLink"><a href="Modele/CreationPlateau.html#nbPiece">nbPiece</a></span> - Variable in class Modele.<a href="Modele/CreationPlateau.html" title="class in Modele">CreationPlateau</a></dt>
<dd>&nbsp;</dd>
</dl>
<a name="I:P">
<!--   -->
</a>
<h2 class="title">P</h2>
<dl>
<dt><span class="memberNameLink"><a href="Vue/Fenetre.html#paintComponent-java.awt.Graphics-">paintComponent(Graphics)</a></span> - Method in class Vue.<a href="Vue/Fenetre.html" title="class in Vue">Fenetre</a></dt>
<dd>
<div class="block"> méthode dessinnant le fond de la fenêtre</div>
</dd>
<dt><span class="memberNameLink"><a href="Vue/AffPlateau.html#panel">panel</a></span> - Variable in class Vue.<a href="Vue/AffPlateau.html" title="class in Vue">AffPlateau</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#partie">partie</a></span> - Variable in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#partieEnCours">partieEnCours</a></span> - Variable in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#personnalise">personnalise</a></span> - Variable in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#piece">piece</a></span> - Variable in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Vue/AffPlateau.html#pieceFantome-piece.PiecesPuzzle-int-">pieceFantome(PiecesPuzzle, int)</a></span> - Method in class Vue.<a href="Vue/AffPlateau.html" title="class in Vue">AffPlateau</a></dt>
<dd>
<div class="block"> méthode qui affiche un fantome de la pièce sur le JButton qui
 se trouve à la position numCase dans la liste des JButton, permet
 de visualiser le déplacement de la pièce</div>
</dd>
<dt><span class="memberNameLink"><a href="Modele/CreationPlateau.html#pieces">pieces</a></span> - Variable in class Modele.<a href="Modele/CreationPlateau.html" title="class in Modele">CreationPlateau</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Modele/CreationPlateau.html#plat">plat</a></span> - Variable in class Modele.<a href="Modele/CreationPlateau.html" title="class in Modele">CreationPlateau</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Vue/AffPlateau.html#plat">plat</a></span> - Variable in class Vue.<a href="Vue/AffPlateau.html" title="class in Vue">AffPlateau</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#plataff">plataff</a></span> - Variable in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>&nbsp;</dd>
<dt><a href="Modele/Plateau.html" title="class in Modele"><span class="typeNameLink">Plateau</span></a> - Class in <a href="Modele/package-summary.html">Modele</a></dt>
<dd>
<div class="block"> Plateau 
  Classe s'occuppant du Plateau de jeu.</div>
</dd>
<dt><span class="memberNameLink"><a href="Modele/Plateau.html#Plateau-int-int-">Plateau(int, int)</a></span> - Constructor for class Modele.<a href="Modele/Plateau.html" title="class in Modele">Plateau</a></dt>
<dd>
<div class="block">Constructeur :  créé un tableau rempli de 0 dont on aura paramètré la
hauteur et la largeur</div>
</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#plateau">plateau</a></span> - Variable in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Vue/AffPlateau.html#playButton">playButton</a></span> - Variable in class Vue.<a href="Vue/AffPlateau.html" title="class in Vue">AffPlateau</a></dt>
<dd>&nbsp;</dd>
</dl>
<a name="I:R">
<!--   -->
</a>
<h2 class="title">R</h2>
<dl>
<dt><span class="memberNameLink"><a href="Vue/AffPlateau.html#reaffich--">reaffich()</a></span> - Method in class Vue.<a href="Vue/AffPlateau.html" title="class in Vue">AffPlateau</a></dt>
<dd>
<div class="block"> méthode qui replace les différents boutons du jeu dans le JPanel, utile pour
le retour à la partie en cours</div>
</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#retourAuMenu--">retourAuMenu()</a></span> - Method in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>
<div class="block"> méthode faisant en sorte que le bouton retour au menu réaffiche le menu
 en ajoutant un bouton Retour à la partie sur la partie n'est pas fini</div>
</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#retourMenu">retourMenu</a></span> - Variable in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Controlleur/AbstractModelEcoutable.html#retraitEcouteur-Controlleur.EcouteurModel-">retraitEcouteur(EcouteurModel)</a></span> - Method in class Controlleur.<a href="Controlleur/AbstractModelEcoutable.html" title="class in Controlleur">AbstractModelEcoutable</a></dt>
<dd>
<div class="block"> methode retirant un EcouteurModel à la liste</div>
</dd>
<dt><span class="memberNameLink"><a href="Controlleur/ModelEcoutable.html#retraitEcouteur-Controlleur.EcouteurModel-">retraitEcouteur(EcouteurModel)</a></span> - Method in interface Controlleur.<a href="Controlleur/ModelEcoutable.html" title="interface in Controlleur">ModelEcoutable</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Modele/CreationPlateau.html#rotation-piece.PiecesPuzzle-">rotation(PiecesPuzzle)</a></span> - Method in class Modele.<a href="Modele/CreationPlateau.html" title="class in Modele">CreationPlateau</a></dt>
<dd>
<div class="block"> méthode qui effectue une rotation de la pièce: elle fonctionne comme
le déplacement.</div>
</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#rotation--">rotation()</a></span> - Method in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>
<div class="block">Lorsqu'une pièce est sectionné, on peut la faire tourner en
appuyant sur la barre d'espace, on effectue en simultanée un test
(la méthode roation du plateau renvoi un boolean) et si la rotation
à echouer, on affiche un message d'erreur via showMessageDialog </div>
</dd>
</dl>
<a name="I:S">
<!--   -->
</a>
<h2 class="title">S</h2>
<dl>
<dt><span class="memberNameLink"><a href="Modele/CreationPlateau.html#sauvegardeRes-java.lang.String-">sauvegardeRes(String)</a></span> - Method in class Modele.<a href="Modele/CreationPlateau.html" title="class in Modele">CreationPlateau</a></dt>
<dd>
<div class="block"> méthode qui sauvegarde le score obtenu par le joueur dans un fichier texte
en prenant en paramètre le message à enregistré
</div>
</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#score">score</a></span> - Variable in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#scoreIA">scoreIA</a></span> - Variable in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#selectPiece--">selectPiece()</a></span> - Method in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>
<div class="block">On ajoute des évenment sur tout les boutons du plateau: si la case où
 on a cliqué contient une pièce, on récupère la pièce et la stocke pour
 pouvoir effectué des actions dessus.</div>
</dd>
<dt><span class="memberNameLink"><a href="Modele/Plateau.html#setTab2-int:A:A-">setTab2(int[][])</a></span> - Method in class Modele.<a href="Modele/Plateau.html" title="class in Modele">Plateau</a></dt>
<dd>&nbsp;</dd>
</dl>
<a name="I:T">
<!--   -->
</a>
<h2 class="title">T</h2>
<dl>
<dt><span class="memberNameLink"><a href="Modele/Plateau.html#toString--">toString()</a></span> - Method in class Modele.<a href="Modele/Plateau.html" title="class in Modele">Plateau</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#txt">txt</a></span> - Variable in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>&nbsp;</dd>
</dl>
<a name="I:V">
<!--   -->
</a>
<h2 class="title">V</h2>
<dl>
<dt><a href="Vue/package-summary.html">Vue</a> - package Vue</dt>
<dd>&nbsp;</dd>
</dl>
<a name="I:W">
<!--   -->
</a>
<h2 class="title">W</h2>
<dl>
<dt><span class="memberNameLink"><a href="Vue/Menu.html#welcome">welcome</a></span> - Variable in class Vue.<a href="Vue/Menu.html" title="class in Vue">Menu</a></dt>
<dd>&nbsp;</dd>
</dl>
<a name="I:X">
<!--   -->
</a>
<h2 class="title">X</h2>
<dl>
<dt><span class="memberNameLink"><a href="Vue/AffPlateau.html#x">x</a></span> - Variable in class Vue.<a href="Vue/AffPlateau.html" title="class in Vue">AffPlateau</a></dt>
<dd>&nbsp;</dd>
</dl>
<a name="I:Y">
<!--   -->
</a>
<h2 class="title">Y</h2>
<dl>
<dt><span class="memberNameLink"><a href="Vue/AffPlateau.html#y">y</a></span> - Variable in class Vue.<a href="Vue/AffPlateau.html" title="class in Vue">AffPlateau</a></dt>
<dd>&nbsp;</dd>
</dl>
<a href="#I:A">A</a>&nbsp;<a href="#I:B">B</a>&nbsp;<a href="#I:C">C</a>&nbsp;<a href="#I:D">D</a>&nbsp;<a href="#I:E">E</a>&nbsp;<a href="#I:F">F</a>&nbsp;<a href="#I:G">G</a>&nbsp;<a href="#I:I">I</a>&nbsp;<a href="#I:M">M</a>&nbsp;<a href="#I:N">N</a>&nbsp;<a href="#I:P">P</a>&nbsp;<a href="#I:R">R</a>&nbsp;<a href="#I:S">S</a>&nbsp;<a href="#I:T">T</a>&nbsp;<a href="#I:V">V</a>&nbsp;<a href="#I:W">W</a>&nbsp;<a href="#I:X">X</a>&nbsp;<a href="#I:Y">Y</a>&nbsp;</div>
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="overview-summary.html">Overview</a></li>
<li>Package</li>
<li>Class</li>
<li><a href="overview-tree.html">Tree</a></li>
<li><a href="deprecated-list.html">Deprecated</a></li>
<li class="navBarCell1Rev">Index</li>
<li><a href="help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev</li>
<li>Next</li>
</ul>
<ul class="navList">
<li><a href="index.html?index-all.html" target="_top">Frames</a></li>
<li><a href="index-all.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
